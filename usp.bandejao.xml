<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" https="true">
<meta>
    <author>Andrew Kurauchi</author>
    <description>Cardapio do bandejao da USP</description>
    <sampleQuery description="Consulta cardapio do bandejao da quimica para o almoco de segunda feira">select * from {table} where bandejao='quimica';</sampleQuery>
</meta>
<bindings>
    <select itemPath="" produces="XML">
        <inputs>  
            <key id='bandejao' type='xs:string' paramType='variable' required="true" />
        </inputs>
        <execute><![CDATA[            
            // Adiciona função em string (sim, eh perigoso, mas acho que nesse caso eh aceitavel)
            String.prototype.regexIndexOf = function(regex, startpos) {
                var indexOf = this.substring(startpos || 0).search(regex);
                return (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;
            }
            
            // Verifica se str eh um dia da semana
            function diaValido(str) {
                if(!str) {
                    return false;
                }
                var dias = ["segunda", "terça", "quarta", "quinta", "sexta", "sábado", "domingo"];
                str = str.toLowerCase(); // Normalmente vem no formato "SEGUNDA-FEIRA", etc
                // Compara com todos os dias
                for (var i in dias) {
                    if (str.indexOf(dias[i]) >= 0) {
                        return true;
                    }
                }
                return false;
            }
            
            // Devolve true se tagStr ("<td bgColor=#ffffff>") é a tag nomeTag ("td")
            function comparaTag(tagStr, nomeTag) {
                var inicio = 1;
                if (tagStr[1] == "/") {
                    inicio = 2;
                }
                tagStr = tagStr.substring(inicio); // Remove "</"
                var fim = tagStr.indexOf(">");
                if (tagStr[fim - 1] == "/") {
                    fim = fim - 1;
                }
                var fimTag = tagStr.indexOf(" ");
                if (fimTag < 0 || fimTag >= fim) {
                    fimTag = fim;
                }
                var tag = tagStr.substring(0, fimTag).toLowerCase();
                return nomeTag.toLowerCase() == tag;
            }
            
            // Limpa tags span, font, b, i, u e center
            function limpaTagsInuteis(strHtml) {
                var retval = "";
                while(1) {
                    var inicio = strHtml.indexOf("<"); // Procura primeiro início de tag
                    if (inicio < 0) {
                        retval += strHtml;
                        break;
                    }
                    retval += strHtml.substring(0, inicio);
                    strHtml = strHtml.substring(inicio);
                    var fim = strHtml.indexOf(">"); // Procura primeiro fim de tag
                    if (fim < 0) {
                        retval += strHtml;
                        break;
                    }
                    var tag = strHtml.substring(0, fim + 1);
                    if (!comparaTag(tag, "span") && 
                        !comparaTag(tag, "font") &&
                        !comparaTag(tag, "b") &&
                        !comparaTag(tag, "i") &&
                        !comparaTag(tag, "u") &&
                        !comparaTag(tag, "center")) {
                        retval += strHtml.substring(0, fim + 1);
                    }
                    strHtml = strHtml.substring(fim + 1); // Prepara pra proxima iteracao
                }
                return retval;
            }
            
            // Devolve str com ou sem "\n"
            function consideraQuebra(quebra, str) {
                if (quebra) {
                    return str;
                }
                return str.replace(/\n+/g, '');
            }
            
            // Devolve se é fecha tag
            function ehFechaTag(tagStr) {
                return tagStr.indexOf("</") >= 0 || tagStr.indexOf("/>") >= 0;
            }
            
            // Devolve tudo o que não for tag em um array
            function encontraConteudos(strHtml) {
                strHtml = limpaTagsInuteis(strHtml);
                strHtml = strHtml.replace(/&nbsp;/g, " ");
                var conteudoStr = "";
                var contaPre = 0;
                while(1) {
                    var inicio = strHtml.indexOf("<"); // Procura primeiro início de tag
                    if (inicio < 0) {
                        conteudoStr += consideraQuebra(contaPre, strHtml);
                        break;
                    }
                    conteudoStr += consideraQuebra(contaPre, strHtml.substring(0, inicio));
                    strHtml = strHtml.substring(inicio);
                    var fim = strHtml.indexOf(">"); // Procura primeiro fim de tag
                    if (fim < 0) {
                        conteudoStr += consideraQuebra(contaPre, strHtml);
                        break;
                    }
                    // Processa tags
                    var tag = strHtml.substring(0, fim + 1);
                    strHtml = strHtml.substring(fim + 1); // Prepara pra próxima iteração
                    if (comparaTag(tag, "pre")) {
                        conteudoStr += "\n";
                        if (ehFechaTag(tag)) {
                            contaPre -= 1;
                        }
                        else {
                            contaPre += 1;
                        }
                    }
                    else if (comparaTag(tag, "br") ||
                             comparaTag(tag, "p") ||
                             comparaTag(tag, "div")) {
                        conteudoStr += "\n";
                    }
                }
                var retval = conteudoStr.split("\n"); // Separa por\n
                // Aplica trim em todas as strings, remove espacos adicionais e remove de retval as strings vazias
                retval = retval.map(function(str) {
                                        return str.trim().replace(/\s+/g, ' ');
                                    }).filter(function(str) {
                                        return str != "";
                                    });
                return retval;
            }
            
            // Devolve um array com o conteudo de todas as tags do tipo tag que encontrar
            function encontraTag(strHtml, tag) {
                var tags = [];
                while(1) {
                    // Procura comeco do abre tag
                    var inicio = strHtml.regexIndexOf(new RegExp("<(" + tag.toLowerCase() + "|" + tag.toUpperCase() + ")"));
                    // Procura comeco do fecha tag
                    var fim = strHtml.regexIndexOf(new RegExp("</(" + tag.toLowerCase() + "|" + tag.toUpperCase() + ")"));
                    if (inicio != -1) {
                        inicio = inicio + strHtml.substring(inicio).indexOf(">"); // Procura fim do abre tag
                    }
                    else {
                        inicio = -1;
                        fim = -1;
                    }
                    if (inicio != -1 && fim != -1 && inicio + 1 < fim) {
                        // Encontrou um conteudo
                        tags.push(strHtml.substring(inicio + 1, fim));
                        strHtml = strHtml.substring(fim);
                        fim = strHtml.indexOf(">");
                        strHtml = strHtml.substring(fim + 1);
                    }
                    else {
                        break;
                    }
                }
                return tags;
            }

            var url = '';
            bandejao = bandejao.toLowerCase();
            if(bandejao == 'central') {
                url = 'http://www.usp.br/coseas/cardapio.html';
            }
            else if(bandejao == 'fisica') {
                url = 'http://www.usp.br/coseas/cardapiofisica.html';
            }
            else if(bandejao == 'quimica') {
                url = 'http://www.usp.br/coseas/cardapioquimica.html';
            }
            else if(bandejao == 'pusp') {
                url = 'http://www.usp.br/coseas/cardcocesp.html';
            }
            else if(bandejao == 'doc') {
                url = 'http://www.usp.br/coseas/carddoc.html';
            }
            else if(bandejao == 'enf') {
                url = 'http://www.usp.br/coseas/cardEscEnf.html';
            }
            else if(bandejao == 'fsp') {
                url = 'http://www.usp.br/coseas/cardFSP.html';
            }
            else if(bandejao == 'direito') {
                url = 'http://www.usp.br/coseas/cardFacDireito.html';
            }

            if(url == '') {
                y.exit(204, "Bandejao nao especificado."); 
            }
            var resultHtml = y.rest(url).get().response;
            var dias = encontraTag(resultHtml, "tr");
            dias = dias.slice(1); // Primeiro tr tem os textos ALMOCO e JANTAR
            
            var cardapio = <cardapio></cardapio>
            for (var dia_i in dias) {
                var dia = dias[dia_i];
                var contaRef = 0; // Refeicao 0 eh almoco, 1 eh janta
                var refeicoesHtml = encontraTag(dia, "td"); // Cada td eh uma refeicao
                for (var refeicao_i in refeicoesHtml) {
                    var refeicaoHtml = refeicoesHtml[refeicao_i];
                    var refeicao = <refeicao></refeicao>
                    if(contaRef == 0) {
                        refeicao.periodo = 'almoco';
                    }
                    else {
                        refeicao.periodo = 'jantar';
                    }
                    var conteudos = encontraConteudos(refeicaoHtml);
                    if (diaValido(conteudos[0])) {
                        refeicao.dia = conteudos[0];
                        conteudos = conteudos.slice(1);
                        for (var i in conteudos) {
                            refeicao.cardapio.item += <item>{conteudos[i]}</item>;
                        }
                        cardapio.cardapio += refeicao;
                    }
                    
                    contaRef += 1;
                }
            }
            response.object = cardapio;
            
        	]]></execute>
    </select>
</bindings>
</table>